pipeline {
    agent any
    tools {
        maven 'mymaven'
    }
    stages {
        stage('Build') {
            steps {
                sh '''
                    echo "*************** Starting CI CD Pipeline Tasks ***************"
                    echo ""
                    echo "....... Build Phase Started :: Compiling Source Code :: ........"
                    cd java_web_code
                    mvn install
                    echo ""
                    echo "Listing contents of target directory after build:"
                    ls -l target
                '''
            }
        }
        stage('Test') {
            steps {
                sh '''
                    echo ""
                    echo "Integration Phase Started :: Copying Artifacts"
                    cd java_web_code
                    ls -l target
                    cp target/wildfly-spring-boot-sample-1.0.0.war ../docker/
                    echo ""
                    echo "Provisioning Phase Started :: Building Docker Container ::"
                    cd ../docker
                    docker build -t devops_pipeline_demo .
                '''
            }
        }
        stage('Deploy') {
            steps {
                sh '''
                    CONTAINER=devops_pipeline_demo
                    OLD="$(docker ps -aq --filter=name="$CONTAINER")"
                    if [ -n "$OLD" ]; then
                        docker stop $OLD && docker rm $OLD
                    fi

                    echo ""
                    echo "..... Deployment Phase Started :: Running Docker Container :: ......"
                    docker run -d -p 8180:8080 --name devops_pipeline_demo devops_pipeline_demo

                    echo "--------------------------------------------------------"
                    echo "View App deployed here: http://server-ip:8180/sample.txt"
                    echo "--------------------------------------------------------"
                '''
            }
        }
    }
}
